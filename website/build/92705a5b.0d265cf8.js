(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{131:function(e,a,t){"use strict";t.d(a,"a",(function(){return b})),t.d(a,"b",(function(){return N}));var n=t(0),r=t.n(n);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function m(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?m(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=r.a.createContext({}),c=function(e){var a=r.a.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},b=function(e){var a=c(e.components);return r.a.createElement(i.Provider,{value:a},e.children)},l={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},j=r.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,m=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),b=c(t),j=n,N=b["".concat(m,".").concat(j)]||b[j]||l[j]||o;return t?r.a.createElement(N,s(s({ref:a},i),{},{components:t})):r.a.createElement(N,s({ref:a},i))}));function N(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,m=new Array(o);m[0]=j;var s={};for(var p in a)hasOwnProperty.call(a,p)&&(s[p]=a[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,m[1]=s;for(var i=2;i<o;i++)m[i]=t[i];return r.a.createElement.apply(null,m)}return r.a.createElement.apply(null,t)}j.displayName="MDXCreateElement"},95:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return s})),t.d(a,"metadata",(function(){return p})),t.d(a,"toc",(function(){return i})),t.d(a,"default",(function(){return b}));var n=t(3),r=t(7),o=(t(0),t(131)),m=["components"],s={title:"Vector"},p={unversionedId:"bitne-strukture-podataka/vector",id:"bitne-strukture-podataka/vector",isDocsHomePage:!1,title:"Vector",description:"O vectoru, primjene, ogranicenja, kompleksnost, zadaci",source:"@site/docs/bitne-strukture-podataka/vector.md",slug:"/bitne-strukture-podataka/vector",permalink:"/docs/bitne-strukture-podataka/vector",editUrl:"https://github.com/vlahovivan/natpro/tree/main/website/docs/bitne-strukture-podataka/vector.md",version:"current",lastUpdatedBy:"Ivan Vlahov",lastUpdatedAt:1627658511,sidebar:"materijaliSidebar",previous:{title:"Asimptotska slo\u017eenost algoritma",permalink:"/docs/o-dobrim-algoritmima/asimptotska-slozenost"},next:{title:"Set",permalink:"/docs/bitne-strukture-podataka/set"}},i=[],c={toc:i};function b(e){var a=e.components,t=Object(r.a)(e,m);return Object(o.b)("wrapper",Object(n.a)({},c,t,{components:a,mdxType:"MDXLayout"}),Object(o.b)("p",null,"O vectoru, primjene, ogranicenja, kompleksnost, zadaci"),Object(o.b)("p",null,"Recimo da imate zadatak u kojem se od vas tra\u017ei da s ulaza \u010ditate brojeve sve dok ne u\u010ditate broj ",Object(o.b)("span",{parentName:"p",className:"math math-inline"},Object(o.b)("span",{parentName:"span",className:"katex"},Object(o.b)("span",{parentName:"span",className:"katex-mathml"},Object(o.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(o.b)("semantics",{parentName:"math"},Object(o.b)("mrow",{parentName:"semantics"},Object(o.b)("mn",{parentName:"mrow"},"0")),Object(o.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"0")))),Object(o.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(o.b)("span",{parentName:"span",className:"base"},Object(o.b)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),Object(o.b)("span",{parentName:"span",className:"mord"},"0"))))),", a zatim trebate ispisati broj u\u010ditanih parnih brojeva te sve u\u010ditane parne brojeve onim redoslijedom kojim su u\u010ditani. Ovaj zadatak bismo mogli rije\u0161iti koriste\u0107i polje, me\u0111utim, postavlja se pitanje, kako odrediti veli\u010dinu tog polja? Mogli bismo naga\u0111ati da ne\u0107emo u\u010ditati vi\u0161e od npr. ",Object(o.b)("span",{parentName:"p",className:"math math-inline"},Object(o.b)("span",{parentName:"span",className:"katex"},Object(o.b)("span",{parentName:"span",className:"katex-mathml"},Object(o.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(o.b)("semantics",{parentName:"math"},Object(o.b)("mrow",{parentName:"semantics"},Object(o.b)("mn",{parentName:"mrow"},"1000")),Object(o.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),Object(o.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(o.b)("span",{parentName:"span",className:"base"},Object(o.b)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),Object(o.b)("span",{parentName:"span",className:"mord"},"1"),Object(o.b)("span",{parentName:"span",className:"mord"},"0"),Object(o.b)("span",{parentName:"span",className:"mord"},"0"),Object(o.b)("span",{parentName:"span",className:"mord"},"0")))))," parnih brojeva, pa postaviti veli\u010dinu polja na ",Object(o.b)("span",{parentName:"p",className:"math math-inline"},Object(o.b)("span",{parentName:"span",className:"katex"},Object(o.b)("span",{parentName:"span",className:"katex-mathml"},Object(o.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(o.b)("semantics",{parentName:"math"},Object(o.b)("mrow",{parentName:"semantics"},Object(o.b)("mn",{parentName:"mrow"},"1000")),Object(o.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),Object(o.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(o.b)("span",{parentName:"span",className:"base"},Object(o.b)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),Object(o.b)("span",{parentName:"span",className:"mord"},"1"),Object(o.b)("span",{parentName:"span",className:"mord"},"0"),Object(o.b)("span",{parentName:"span",className:"mord"},"0"),Object(o.b)("span",{parentName:"span",className:"mord"},"0"))))),", te bi to rje\u0161enje izgledalo ovako nekako:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},'int brojParnih = 0;\nint parniBrojevi[1000];\n\nint x;\n\ndo {\n    cin >> x;\n\n    if(x % 2 == 0) {\n        parniBrojevi[brojParnih] = x;\n        brojParnih++;\n    }\n} while(x != 0);\n\ncout << brojParnih << endl;\n\nfor(int i = 0; i < brojParnih; i++){\n    cout << parniBrojevi[i] << " ";\n}\n')),Object(o.b)("p",null,"Me\u0111utim, o\u010dito je da na\u0161 program ne\u0107e raditi ako upi\u0161emo vi\u0161e od ",Object(o.b)("span",{parentName:"p",className:"math math-inline"},Object(o.b)("span",{parentName:"span",className:"katex"},Object(o.b)("span",{parentName:"span",className:"katex-mathml"},Object(o.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(o.b)("semantics",{parentName:"math"},Object(o.b)("mrow",{parentName:"semantics"},Object(o.b)("mn",{parentName:"mrow"},"1000")),Object(o.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),Object(o.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(o.b)("span",{parentName:"span",className:"base"},Object(o.b)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),Object(o.b)("span",{parentName:"span",className:"mord"},"1"),Object(o.b)("span",{parentName:"span",className:"mord"},"0"),Object(o.b)("span",{parentName:"span",className:"mord"},"0"),Object(o.b)("span",{parentName:"span",className:"mord"},"0")))))," parnih brojeva. Osim toga, ako upi\u0161emo puno manje od ",Object(o.b)("span",{parentName:"p",className:"math math-inline"},Object(o.b)("span",{parentName:"span",className:"katex"},Object(o.b)("span",{parentName:"span",className:"katex-mathml"},Object(o.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(o.b)("semantics",{parentName:"math"},Object(o.b)("mrow",{parentName:"semantics"},Object(o.b)("mn",{parentName:"mrow"},"1000")),Object(o.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"1000")))),Object(o.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(o.b)("span",{parentName:"span",className:"base"},Object(o.b)("span",{parentName:"span",className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}}),Object(o.b)("span",{parentName:"span",className:"mord"},"1"),Object(o.b)("span",{parentName:"span",className:"mord"},"0"),Object(o.b)("span",{parentName:"span",className:"mord"},"0"),Object(o.b)("span",{parentName:"span",className:"mord"},"0")))))," parnih brojeva, ostavit \u0107emo dobar dio rezervirane memorije neiskori\u0161tenom. Ovo su samo od nekih problema koje ",Object(o.b)("em",{parentName:"p"},"container")," vector mo\u017ee rije\u0161iti."),Object(o.b)("p",null,"Vector je dinami\u010dko polje, odnosno polje varijabilne duljine, kojem mo\u017eemo dodavati elemente na kraj te skidati elemente s kraja u ",Object(o.b)("span",{parentName:"p",className:"math math-inline"},Object(o.b)("span",{parentName:"span",className:"katex"},Object(o.b)("span",{parentName:"span",className:"katex-mathml"},Object(o.b)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},Object(o.b)("semantics",{parentName:"math"},Object(o.b)("mrow",{parentName:"semantics"},Object(o.b)("mi",{parentName:"mrow"},"O"),Object(o.b)("mo",{parentName:"mrow",stretchy:"false"},"("),Object(o.b)("mn",{parentName:"mrow"},"1"),Object(o.b)("mo",{parentName:"mrow",stretchy:"false"},")")),Object(o.b)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(1)")))),Object(o.b)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},Object(o.b)("span",{parentName:"span",className:"base"},Object(o.b)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),Object(o.b)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),Object(o.b)("span",{parentName:"span",className:"mopen"},"("),Object(o.b)("span",{parentName:"span",className:"mord"},"1"),Object(o.b)("span",{parentName:"span",className:"mclose"},")")))))," vremenu (u ve\u0107ini slu\u010dajeva). Pomo\u0107u vectora rje\u0161enje gore navedenog zadatka bi izgledalo ovako:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},'vector<int> parniBrojevi;\n\nint x;\n\ndo {\n    cin >> x;\n    \n    if(x % 2 == 0) parniBrojevi.push_back(x);\n} while(x != 0);\n\ncout << parniBrojevi.size() << endl;\n\nfor(auto broj : parniBrojevi){\n    cout << broj << " ";\n}\n')),Object(o.b)("p",null,"Kao \u0161to smo vidjeli, vector mo\u017eemo deklarirati linijom:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"vector<tip> ime;\n")),Object(o.b)("p",null,"gdje ",Object(o.b)("inlineCode",{parentName:"p"},"tip")," ozna\u010dava tip podataka koji \u017eelimo spremiti u vector (npr. ",Object(o.b)("inlineCode",{parentName:"p"},"int"),", ",Object(o.b)("inlineCode",{parentName:"p"},"char"),", ",Object(o.b)("inlineCode",{parentName:"p"},"vector<int>")," itd.), a ",Object(o.b)("inlineCode",{parentName:"p"},"ime")," ozna\u010dava ime varijable. U gornjem primjeru to smo u\u010dinili u retku ",Object(o.b)("inlineCode",{parentName:"p"},"vector<int> parniBrojevi"),". Osim ovog na\u010dina mo\u017eemo i postaviti po\u010detni broj elemenata i njihovu po\u010detnu vrijednost:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},"// Vector znakova veli\u010dine 100\nvector<char> vectorZnakova(100); \n\n// Vector doubleova veli\u010dine 314, svi elementi su postavljeni na 3.14159\nvector<double> vectorPijeva(314, 3.14159);\n")),Object(o.b)("p",null,"Dodavanje na kraj vectora izvr\u0161avamo naredbom ",Object(o.b)("inlineCode",{parentName:"p"},"push_back"),", a s kraja mo\u017eemo ukloniti element naredbom ",Object(o.b)("inlineCode",{parentName:"p"},"pop_back"),". Elementima mo\u017eemo pristupiti naredbom ",Object(o.b)("inlineCode",{parentName:"p"},"at")," ili operatorom pristupa (uglate zagrade, ","[ ]","). Prvi element mo\u017eemo dohvatiti naredbom ",Object(o.b)("inlineCode",{parentName:"p"},"front"),", a posljednji element naredbom ",Object(o.b)("inlineCode",{parentName:"p"},"back"),". Veli\u010dinu polja mo\u017eemo dohvatiti naredbom ",Object(o.b)("inlineCode",{parentName:"p"},"size"),". Mo\u017eemo izbrisati sve elemente naredbom ",Object(o.b)("inlineCode",{parentName:"p"},"clear"),". Sve navedene naredbe osim ",Object(o.b)("inlineCode",{parentName:"p"},"clear")," su konstantne slo\u017eenosti, a ",Object(o.b)("inlineCode",{parentName:"p"},"clear")," je linearne slo\u017eenosti, ovisno o veli\u010dini vectora."),Object(o.b)("p",null,"Tako\u0111er, kao \u0161to smo vidjeli u gornjem rje\u0161enju zadatka, mo\u017eemo iterirati kroz sve elemente niza kori\u0161tenjem for-each petlje."),Object(o.b)("p",null,"Dokumentaciju i jo\u0161 podataka o vectoru mo\u017eete prona\u0107i ",Object(o.b)("a",{parentName:"p",href:"https://www.cplusplus.com/reference/vector/vector/"},"ovdje"),"."))}b.isMDXComponent=!0}}]);